{"version":3,"file":"static/js/673.0b9b31be.chunk.js","mappings":"kOAEO,MAAMA,EAAcC,EAAAA,KAAaC,MAAM,CAC5CC,MAAOF,EAAAA,KAAaG,SAAS,qBAC7BC,SAAUJ,EAAAA,KAAaG,SAAS,0B,sBCO3B,MAAME,EAAYA,KACvB,MAAMC,GAAWC,EAAAA,EAAAA,MAgBjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAOC,UAAUC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAWC,EAAAA,EAAOI,MAAMF,SAAC,WAC7BC,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLC,cAAe,CACbd,MAAO,GACPE,SAAU,IAEZa,iBAAkBlB,EAClBmB,SAvBeC,CAACC,EAAQC,KAC5Bf,GAASgB,EAAAA,EAAAA,IAAMF,IACZG,MAAKC,IACJ,GAA+B,aAA3BA,EAAIC,KAAKC,cACX,MAAM,IAAIC,MAAM,6BAElBC,EAAAA,GAAMC,KAAK,WAADC,OAAYN,EAAIO,QAAQC,KAAKC,MAAO,IAE/CC,OAAMC,IACLd,EAAQe,cAAc,WAAY,IAClCR,EAAAA,GAAMS,MAAMF,EAAEG,QAAQ,GACtB,EAYuB1B,UAEvBJ,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAAC9B,UAAWC,EAAAA,EAAO8B,KAAMC,aAAa,KAAI7B,SAAA,EAC7CJ,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAAA,EAAOgC,MAAM9B,SAAA,CAAC,SAE9BC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAK,CAAClC,UAAWC,EAAAA,EAAOkC,MAAOC,KAAK,QAAQZ,KAAK,WAClDpB,EAAAA,EAAAA,KAACiC,EAAAA,GAAY,CACXrC,UAAWC,EAAAA,EAAOqC,WAClBd,KAAK,QACLe,UAAU,aAIdxC,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAAA,EAAOgC,MAAM9B,SAAA,CAAC,YAE9BC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAK,CAAClC,UAAWC,EAAAA,EAAOkC,MAAOC,KAAK,WAAWZ,KAAK,cACrDpB,EAAAA,EAAAA,KAACiC,EAAAA,GAAY,CACXrC,UAAWC,EAAAA,EAAOuC,cAClBhB,KAAK,WACLe,UAAU,aAIdnC,EAAAA,EAAAA,KAAA,UAAQJ,UAAWC,EAAAA,EAAOwC,IAAKL,KAAK,SAAQjC,SAAC,WAI7CJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAOyC,YAAYvC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,KAAGJ,UAAWC,EAAAA,EAAO0C,KAAKxC,SAAC,4BAC3BC,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACC,GAAG,YAAY7C,UAAWC,EAAAA,EAAO6C,KAAK3C,SAAC,uBAM/C,EClEV,EAJkB4C,KACT3C,EAAAA,EAAAA,KAACR,EAAS,G,iCCFnB,SAAgB,UAAY,wBAAwB,MAAQ,oBAAoB,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,IAAM,kBAAkB,YAAc,0BAA0B,KAAO,mBAAmB,KAAO,mBAAmB,UAAY,wBAAwB,WAAa,yBAAyB,cAAgB,4B","sources":["helpers/validationSchemas/loginSchema.js","components/LoginRegisterForm/LoginForm.jsx","pages/LoginPage.jsx","webpack://frontend-retro-games/./src/components/LoginRegisterForm/Form.module.css?9e25"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const LoginSchema = Yup.object().shape({\n  email: Yup.string().required('Email is required'),\n  password: Yup.string().required('Password is required'),\n});\n","import { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { ErrorMessage, Field, Formik, Form } from 'formik';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { login } from 'myRedux/auth/operations';\nimport { LoginSchema } from 'helpers/validationSchemas/loginSchema';\n\nimport styles from './Form.module.css';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    dispatch(login(values))\n      .then(res => {\n        if (res.meta.requestStatus === 'rejected') {\n          throw new Error('Invalid email or password');\n        }\n        toast.info(`Welcome ${res.payload.user.name}`);\n      })\n      .catch(e => {\n        actions.setFieldValue('password', '');\n        toast.error(e.message);\n      });\n  };\n\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.title}>LOGIN</h2>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validationSchema={LoginSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={styles.form} autoComplete=\"on\">\n          <label className={styles.label}>\n            Email\n            <Field className={styles.input} type=\"email\" name=\"email\" />\n            <ErrorMessage\n              className={styles.errorEmail}\n              name=\"email\"\n              component=\"span\"\n            />\n          </label>\n\n          <label className={styles.label}>\n            Password\n            <Field className={styles.input} type=\"password\" name=\"password\" />\n            <ErrorMessage\n              className={styles.errorPassword}\n              name=\"password\"\n              component=\"span\"\n            />\n          </label>\n\n          <button className={styles.btn} type=\"submit\">\n            LOGIN\n          </button>\n\n          <div className={styles.signWrapper}>\n            <p className={styles.text}>Don't have an account?</p>\n            <Link to=\"/register\" className={styles.link}>\n              Register\n            </Link>\n          </div>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { LoginForm } from 'components/LoginRegisterForm/LoginForm';\n\nconst LoginPage = () => {\n  return <LoginForm />;\n};\n\nexport default LoginPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Form_container__4NaTB\",\"title\":\"Form_title__9AEHt\",\"form\":\"Form_form__TNIdZ\",\"label\":\"Form_label__ytBHP\",\"input\":\"Form_input__qXRfw\",\"btn\":\"Form_btn__4n3vA\",\"signWrapper\":\"Form_signWrapper__en3dM\",\"text\":\"Form_text__pGl8F\",\"link\":\"Form_link__tNHfp\",\"errorName\":\"Form_errorName__dFo63\",\"errorEmail\":\"Form_errorEmail__YH9Bs\",\"errorPassword\":\"Form_errorPassword__UDH0G\"};"],"names":["LoginSchema","Yup","shape","email","required","password","LoginForm","dispatch","useDispatch","_jsxs","className","styles","container","children","_jsx","title","Formik","initialValues","validationSchema","onSubmit","handleSubmit","values","actions","login","then","res","meta","requestStatus","Error","toast","info","concat","payload","user","name","catch","e","setFieldValue","error","message","Form","form","autoComplete","label","Field","input","type","ErrorMessage","errorEmail","component","errorPassword","btn","signWrapper","text","Link","to","link","LoginPage"],"sourceRoot":""}